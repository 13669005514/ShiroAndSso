<?xml version="1.0" encoding="UTF-8"?>
<!--
    配置日志输出信息
    TRACE < DEBUG < INFO < WARN < ERROR < FATAL
    scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载。默认值为true
    scanPeriod:设置监测配置文件是否有修改的时间间隔。如果没有给出时间单位，默认单位是毫秒。默认的时间间隔为1分钟
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false
-->
<configuration  scan="true" scanPeriod="60 seconds" debug="true">
    <!-- 每个logger都关联到logger上下文，默认上下文名称为“default” -->
    <contextName>logback</contextName>

    <!-- 定义变量值 -->
    <property name="logback.logdir" value="D:/tmp"/>
    <property name="logback.appname" value="supermap"/>

    <!--
        格式化日志输出节点
        name:设置节点名
        class:指定输出策略
            控制台输出：ch.qos.logback.core.ConsoleAppender
            文件输出：ch.qos.logback.core.rolling.RollingFileAppender
        filter:设置拦截器，符合指定级别的日志才会输出
        rollingPolicy：设置日志切分规则
            fileNamePattern：指定文件名格式
            maxHistory：设置日志保留天数
            totalSizeCap：设置日志文件大小，超过限度就会删除旧日志
        encoder:设置日志输出格式
            %d{HH: mm:ss.SSS}——日志输出时间
            %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
            %-5level——日志级别，并且使用5个字符靠左对齐
            %logger{36}——日志输出者的名字
            %msg——日志消息
            %n——平台的换行符
    -->
    <!--输出到控制台-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </layout>
    </appender>

    <!--输出到文件（提示和警告日志）-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--过滤 Error-->
            <level>Error</level>
            <!--匹配到就禁止-->
            <onMatch>DENY</onMatch>
            <!--没有匹配到就允许-->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <file>${logback.logdir}/info.${logback.appname}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logback.logdir}/info.${logback.appname}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>


    <!--输出到文件(错误日志)-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>Error</level>
        </filter>
        <!--<file>${logback.logdir}/error.${logback.appname}.log</file>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logback.logdir}/error.${logback.appname}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>90</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

<!--
    指定日志输出级别
    level：指定输出级别，默认是DEBUG
    appender-ref：指定输出策略
-->
    <root level="DEBUG">
        <appender-ref ref="consoleLog" />
        <appender-ref ref="fileInfoLog" />
        <appender-ref ref="fileErrorLog" />
    </root>

    <!-- 日志输出精确配置 -->
    <!--
        可以配置制定包或者类的日志输出
        name:指定包名或类名
        level：设置打印级别，大小写无关，默认自动继承上一级
        additivity：是否向上级loger传递打印信息。默认是true（注意避免重复输出）
        appender-ref:指定输出策略
    -->

    <!--<logger name="com.supermap.webgis" level="DEBUG">-->
        <!--<appender-ref ref="fileInfoLog" />-->
    <!--</logger>-->
    <!--<logger name="com.supermap.webgis.demo.config" level="INFO" additivity="false">-->
        <!--<appender-ref ref="fileInfoLog"/>-->
        <!--<appender-ref ref="fileErrorLog"/>-->
    <!--</logger>-->

    <!-- 根据不同环境（prod:生产环境，test:测试环境，dev:开发环境）配置日志输出 -->

    <!--<springProfile name="dev">-->
        <!--<logger name="com.supermap.webgis.demo" level="INFO"/>-->
    <!--</springProfile>-->

</configuration>